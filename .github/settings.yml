# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

  # The name of the repository. Changing this will rename the repository
  # name: repo-name

  # A short description of the repository that will show up on GitHub
  # description: description of repo

  # A URL with more information about the repository
  # homepage: https://example.github.io/

  # A comma-separated list of topics to set on the repository
  # topics: github, probot

  # Either `true` to make the repository private, or `false` to make it public.
  private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: false

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: true

  # Updates the default branch for this repository.
  default_branch: main

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: true

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: false

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: false

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: false

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: false

# Labels: define labels for Issues and Pull Requests
labels:
  - name: bug
    color: d73a4a
    default: true
    description: Something isn't working
  - name: documentation"
    color: 0075ca
    default: true
    description: Improvements or additions to documentation
  - name: duplicate
    color: cfd3d7
    default: true
    description: This issue or pull request already exists
  - name: enhancement
    color: a2eeef
    default: true
    description: New feature or request
  - name: good first issue
    color: 7057ff
    default: true
    description: Good for newcomers
  - name: help wanted
    color: 008672
    default: true
    description: Extra attention is needed
  - name: invalid
    color: e4e669
    default: true
    description: This doesn't seem right
  - name: question
    color: d876e3
    default: true
    description: Further information is requested
  - name: wontfix
    color: ffffff
    default: true
    description: This will not be worked on

# Milestones: define milestones for Issues and Pull Requests
#milestones:
  

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
#collaborators:
  # - username: bkeepers
  #   permission: push
  # - username: hubot
  #   permission: pull

  # Note: `permission` is only valid on organization-owned repositories.
  # The permission to grant the collaborator. Can be one of:
  # * `pull` - can pull, but not push to or administer this repository.
  # * `push` - can pull and push, but not administer this repository.
  # * `admin` - can pull, push and administer this repository.
  # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
#teams:
  #- name: core
    # The permission to grant the team. Can be one of:
    # * `pull` - can pull, but not push to or administer this repository.
    # * `push` - can pull and push, but not administer this repository.
    # * `admin` - can pull, push and administer this repository.
    # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
    # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
  #  permission: admin
  #- name: docs
  #  permission: push

branches:
  - name: main
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      protection:
      required_pull_request_reviews: null
      required_status_checks: null
      enforce_admins: null
      restrictions: null